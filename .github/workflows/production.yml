name: Production

on:
  push:
    branches: [ main ]

jobs:
  Unit-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node and cache Dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: myCargonaut/package-lock.json
      - name: Install Dependencies
        run: (cd myCargonaut && npm ci)
      - name: Run Unit-Tests
        run: (cd myCargonaut && npm run test:ci)

  Linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node and cache Dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: myCargonaut/package-lock.json
      - name: Install Dependencies
        run: (cd myCargonaut && npm ci)
      - name: Run Linter
        run: (cd myCargonaut && npm run lint)
        
  Build:
    runs-on: ubuntu-latest
    needs: [Unit-Tests, Linter]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Setup Node and cache Dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: myCargonaut/package-lock.json
      - name: Install Dependencies
        run: (cd myCargonaut && npm ci)
      - name: Run Build-Production
        run: (cd myCargonaut && npm run build)  
      - name: Upload Production Build for Deploy
        uses: actions/upload-artifact@v2
        with:
          name: Production-Build
          path: myCargonaut/dist/myCargonaut
        
  E2E_Tests:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Production-Build for Deploy
        uses: actions/download-artifact@v2
        with:
          name: Production-Build
          path: myCargonaut/dist/myCargonaut
      - name: Setup Node and cache Dependencies
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: myCargonaut/package-lock.json
      - name: Install Dependencies
        run: (cd myCargonaut && npm ci)
      - name: Install Firebase-Tools
        run:  (cd myCargonaut && npm install -g firebase-tools) 
      - name: Run E2E Tests with Firebase-Database
        run: (cd myCargonaut && npm run cypress-run:ci)
          
  Deploy_to_Firebase:
    runs-on: ubuntu-latest
    needs: [E2E_Tests]
    environment: 
      name: Firebase
      url: https://mycargonaut-2e064.web.app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Download Production-Build for Deploy
        uses: actions/download-artifact@v2
        with:
          name: Production-Build
          path: myCargonaut/dist
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_PATH: myCargonaut
          
  Generate_and_Deploy_Code-Documentation:
    runs-on: ubuntu-latest
    needs: [E2E_Tests]
    steps:
     - name: Checkout Repository
       uses: actions/checkout@v2
     - name: Setup Node and cache Dependencies
       uses: actions/setup-node@v2
       with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: myCargonaut/package-lock.json
     - name: Install Dependencies
       run: (cd myCargonaut && npm ci)
     - name: Install Compodoc
       run: (cd myCargonaut && npm install -g @compodoc/compodoc) 
     - name: Run Compodoc
       run: (cd myCargonaut && npm run compodoc)
     - name: Deploy Documentation to Github-Pages
       uses: peaceiris/actions-gh-pages@v3
       with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: myCargonaut/documentation
